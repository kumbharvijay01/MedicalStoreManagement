/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Sales;

import DB.Dbconn;

import java.awt.Desktop;
import static java.awt.PageAttributes.MediaType.D;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import master.*;


/**
 *
 * @author user
 */
public class CounterReturn extends javax.swing.JInternalFrame {
Dbconn conn;
    PreparedStatement pst = null;
    Connection con = null;
    ResultSet rs = null;
    DefaultTableModel modelItem;
    ResultSet rs_return;
    String dt,prod,qty;
    String error;
    int valid;
    //ImageIcon icona = new ImageIcon("D:\\my project\\MedicalStoreManagement\\src\\images\\ajax_clock_small.gif","");
    
    
    /**
     * Creates new form attendance
     */
    public CounterReturn(JFrame parent, boolean modal) {
        initComponents();
        show_date();
        
        modelItem = (DefaultTableModel) js_table.getModel();
        modelItem.setRowCount(0);
        conn = new Dbconn();
        rs_return = conn.execute_query("select * from countersalesdata where counter_status = ?", new String[]{"ACTIVE"});
        try
        {
            while(rs_return.next())
            {
                dt =rs_return.getString("countersale_date");
                prod = rs_return.getString("product_name");
                qty = rs_return.getString("product_quantity");            
                modelItem.addRow(new String[]{dt,prod,qty});
            }
            
        }
        catch(Exception e)
        {
            
        }
        
        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        js_productname = new javax.swing.JTextField();
        js_totalquantity = new javax.swing.JTextField();
        js_perunitprice = new javax.swing.JTextField();
        jc_totalamount = new javax.swing.JTextField();
        js_save = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        js_totalstock = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        js_amount = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        js_table = new javax.swing.JTable();

        setClosable(true);
        setTitle("Sales Return");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Product Name:");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Quantity:");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Per Unit Price:");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Total:");

        js_productname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                js_productnameFocusLost(evt);
            }
        });

        js_totalquantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                js_totalquantityFocusLost(evt);
            }
        });

        js_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-document-save-icon.png"))); // NOI18N
        js_save.setText("Calclate");
        js_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                js_saveActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Stock:");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Collection Amount:");

        js_amount.setEditable(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Clear-icon.png"))); // NOI18N
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(js_totalstock, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jc_totalamount, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(js_perunitprice, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(js_productname, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(js_totalquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(js_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(js_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(js_productname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(js_totalquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(js_perunitprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jc_totalamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(js_totalstock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(js_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(js_save)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(52, 52, 52))
        );

        jLabel7.setText("Date:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Opening and Current Sales"));

        js_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date Of sale", "Product", "Quntity"
            }
        ));
        jScrollPane1.setViewportView(js_table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void js_productnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_js_productnameFocusLost
       conn=new Dbconn();
    rs=conn.execute_query("select Actual_price from product_info where product_name=?", new String[]{js_productname.getText()});
      try
      {
         while(rs.next())
       {
          js_perunitprice.setText(rs.getString("Actual_price"));
           System.out.print("run");
       }
       }
      catch(Exception ex)
      {
          ex.printStackTrace();
      }
           

    }//GEN-LAST:event_js_productnameFocusLost

    private void js_totalquantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_js_totalquantityFocusLost
              float a,b,c,d,e;
        conn=new Dbconn();
        
 
  {
   a=Float.parseFloat(js_totalquantity.getText());
   b=Float.parseFloat(js_perunitprice.getText());
   c=a*b;
   
   jc_totalamount.setText(String.valueOf(c));
  }
    conn=new Dbconn();
        
  rs=conn.execute_query("select totalstock from product_info where product_name=? ", new String[]{js_productname.getText()});
 
  try
      {
         while(rs.next())
       {
js_totalstock.setText(rs.getString("totalstock"));
           System.out.print("run");

       }
       }
      catch(Exception ex)
      {
          ex.printStackTrace();
      }
  
    conn=new Dbconn();
        
  rs=conn.execute_query("select counter_totalcollection from  countercollection where countersale_date=? ", new String[]{jLabel7.getText()});
 
  try
      {
         while(rs.next())
       {
js_amount.setText(rs.getString("counter_totalcollection"));
           System.out.print("run");

       }
       }
      catch(Exception ex)
      {
          ex.printStackTrace();
      }
  
 
  /***********************cash**********/////////////////////////////
   
    }//GEN-LAST:event_js_totalquantityFocusLost

    private void js_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_js_saveActionPerformed

        error="";
        valid=0;
        if(js_productname.getText().equals(""))
        {
            error+="\n"+"Please Enter the Product name.";
            valid=1;
        }
        
        if(js_totalquantity.getText().equals(""))
        {
            error+="\n"+"Please Enter the quantity Of the product.!";
            valid=1;
        }
        
        if(valid==1)
        {
            JOptionPane.showMessageDialog(rootPane, error , "Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        
        
        
        
        
        js_save.setText("Please Wait...");
        //js_save.setIcon(icona);
 //*************product info updation***************///////////////
        int yes_no_option;
        yes_no_option = JOptionPane.showConfirmDialog(rootPane, "Are you sure?", "Confirm!", JOptionPane.YES_NO_OPTION);
        if(yes_no_option==0)
        {
            
       
        
        
        int a,d,e;
    a=Integer.parseInt(js_totalquantity.getText());
   d=Integer.parseInt(js_totalstock.getText());
   e=d+a;
   
 js_totalstock.setText(String.valueOf(e));
 String value1=js_totalstock.getText();
String value2=js_productname.getText();
        //rs=conn.execute_query("update  product_info set totalstock='"+value1+"' where product_name=? ", new String[]{jc_name.getText()});
  int j;
    j = conn.update_data("update product_info set totalstock=? where product_name=?", new String[]{value1,value2});
  try
      {
         while(rs.next())
       {
        js_totalstock.setText(rs.getString("totalstock"));
           System.out.print("totalstock");

       }
       }
      catch(Exception ex)
      {
          ex.printStackTrace();
      }
  ///////////*************updating acount********///////////////
//   conn=new Dbconn();
//        
//  rs=conn.execute_query("select counter_totalcollection from  countercollection where countersale_date=? ", new String[]{jLabel7.getText()});
// 
//  try
//      {
//         while(rs.next())
//       {
//js_totalstock.setText(rs.getString("counter_totalcollection"));
//           System.out.print("run");
//
//       }
//       }
//      catch(Exception ex)
//      {
//          ex.printStackTrace();
//      }
//  
  float x,y,z;
    x=Float.parseFloat(jc_totalamount.getText());
   y=Float.parseFloat(js_amount.getText());
   z=y-x;
   
js_amount.setText(String.valueOf(z));
 String value3=js_amount.getText();
String value4=jLabel7.getText();
        //rs=conn.execute_query("update  product_info set totalstock='"+value1+"' where product_name=? ", new String[]{jc_name.getText()});
  int m;
    m = conn.update_data("update  countercollection set counter_totalcollection=? where countersale_date=?", new String[]{value3,value4});
  try
      {
         while(rs.next())
       {
       js_amount.setText(rs.getString("counter_totalcollection"));
           System.out.print("counter_totalcollection");

       }
       }
      catch(Exception ex)
      {
          ex.printStackTrace();
      }
         
  
  JOptionPane.showMessageDialog(rootPane, "Successful !!!", "Massage", JOptionPane.INFORMATION_MESSAGE);
  
 
      
    //js_amount.setText("");
        js_perunitprice.setText("");
        js_productname.setText("");
        
        js_totalquantity.setText("");
        js_totalstock.setText("");
        jc_totalamount.setText("");
        js_save.setText("Calculate");
 
   }
        else
        {
             js_save.setText("Calculate");
            
        }
        }
 
    }//GEN-LAST:event_js_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //js_amount.setText("");
        js_perunitprice.setText("");
        js_productname.setText("");
        
        js_totalquantity.setText("");
        js_totalstock.setText("");
        jc_totalamount.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    public void show_date()
    {
    Calendar c1=new GregorianCalendar();
      
     int month=c1.get(Calendar.MONTH);
        int day=c1.get(Calendar.DAY_OF_MONTH);
        int year=c1.get(Calendar.YEAR);
      jLabel7.setText(year+"/"+(month+1)+"/"+day);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jc_totalamount;
    private javax.swing.JTextField js_amount;
    private javax.swing.JTextField js_perunitprice;
    private javax.swing.JTextField js_productname;
    private javax.swing.JButton js_save;
    private javax.swing.JTable js_table;
    private javax.swing.JTextField js_totalquantity;
    private javax.swing.JTextField js_totalstock;
    // End of variables declaration//GEN-END:variables
}
