/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Sales;

import DB.Dbconn;
import Purchase.*;
import Report.ReportViewwithparam;
import Stock.Materialinward;
//import demon.*;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import master.*;
import medicalstoremanagement.index;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author user
 */
public class SalesInvoice extends javax.swing.JInternalFrame {
Dbconn conn;
    ResultSet rs;
    PreparedStatement ps;
    Statement st;
     Connection con;
 DefaultTableModel modalItem;
  float temp,temp1,temp2;
  int index=1;
  String productid;
  String productname,total_stock;
  String productrateperunit;
  String Vat;
  String actual_price;
  String discount,temp3,temp4,temp5;
   float m,n,o,x,y,z;
  DefaultTableModel modelItem;
  String a,b,c,d,e,f;
  int row,col,row1;
    TableRowSorter<TableModel> sorter;
     private String[] columnNames = {"Product Id", "Product Name", "Product Per Unit Price", "Quntity","Total"};
    /**
     * Creates new form attendance
     */
         
    
    

    public SalesInvoice(JFrame parent, boolean modal) {
        initComponents();
        show_date();
ccomm_add();
modalItem=(DefaultTableModel)jsale_producttable.getModel();
//refreshForm();
product_table();
modalItem=(DefaultTableModel)jsale_producttable.getModel();
 //modalItem.setRowCount(0);
 sorter = new TableRowSorter<TableModel>(modalItem);
      jsale_producttable.setRowSorter(sorter);
       String searchteaxt;
//refreshForm();
    
increament();
 clear();
    }
  public void increament()
    {
        int x;
        String grx = null;
        ResultSet rs_grno;
        Dbconn conn = new Dbconn();
        rs_grno = conn.execute_query("Select MAX(bill_id) from sales_store where status= ?", new String[]{"ACTIVE"});
       
        try {
            while(rs_grno.next())
            {
               //System.out.println(rs_grno.getString("Select MAX(sales_return_id)"));
                grx = rs_grno.getString("MAX(bill_id)");
                if(grx==null)
                {
                    grx="0";
                }
             }
            x=Integer.parseInt(grx);
            x=x+1;
            grx=""+x;
           jsales_invoiceno.setText(grx);
        } catch (SQLException ex) {
            Logger.getLogger(Materialinward.class.getName()).log(Level.SEVERE, null, ex);
        }
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jsales_invoiceno = new javax.swing.JTextField();
        jsale_date = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jsale_address = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jsale_phone = new javax.swing.JTextField();
        jcustomer_name = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cust_id = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jsale_save = new javax.swing.JButton();
        jsale_home = new javax.swing.JButton();
        jsales_clear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jsale_addproduct = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jsale_totalamount = new javax.swing.JTextField();
        jsale_remaningamount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jsale_paidcash = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jsale_compaymentmode = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jsale_paid = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jsales_discont = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jsale_producttable = new javax.swing.JTable();
        sale_totalcalculation = new javax.swing.JPanel();
        ADD = new javax.swing.JButton();
        jsale_remove = new javax.swing.JButton();
        jsales_auto = new javax.swing.JTextField();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setTitle("SalesInvoice");
        setMinimumSize(new java.awt.Dimension(1350, 550));
        setPreferredSize(new java.awt.Dimension(1350, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setText("Sales Invoice");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 11, 108, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Bill Id:");

        jsales_invoiceno.setEditable(false);
        jsales_invoiceno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsales_invoicenoActionPerformed(evt);
            }
        });

        jsale_date.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel16.setText("Address");

        jsale_address.setColumns(20);
        jsale_address.setRows(5);
        jScrollPane4.setViewportView(jsale_address);

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Phone No.:");

        jcustomer_name.setEditable(true);
        jcustomer_name.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcustomer_namePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Date:");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Custome ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cust_id, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jsales_invoiceno, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcustomer_name, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsale_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsale_date, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jsales_invoiceno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jsale_date)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jsale_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cust_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcustomer_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel16)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 640, 180));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jsale_save.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jsale_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-document-save-icon.png"))); // NOI18N
        jsale_save.setText("Save");
        jsale_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsale_saveActionPerformed(evt);
            }
        });
        jsale_save.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jsale_saveKeyPressed(evt);
            }
        });

        jsale_home.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jsale_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home icon.png"))); // NOI18N
        jsale_home.setText("HOME");
        jsale_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsale_homeActionPerformed(evt);
            }
        });

        jsales_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        jsales_clear.setText("CLEAR");
        jsales_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsales_clearActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print-icon.png"))); // NOI18N
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jsale_save, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jsales_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jsale_home, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jsales_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jsale_home, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jsale_save, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jsale_addproduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Product Name", " Vat %", "M.R.P.", "Quntity", "Actual Price", "Total "
            }
        ));
        jsale_addproduct.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jsale_addproductFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jsale_addproductFocusLost(evt);
            }
        });
        jsale_addproduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jsale_addproductMouseClicked(evt);
            }
        });
        jsale_addproduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jsale_addproductKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jsale_addproductKeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jsale_addproduct);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel10.setText("TotalAmount:");

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setText("Remaning Amount:");

        jsale_totalamount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jsale_totalamountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jsale_totalamountFocusLost(evt);
            }
        });
        jsale_totalamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsale_totalamountActionPerformed(evt);
            }
        });
        jsale_totalamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jsale_totalamountKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel14.setText("PaidCash:");

        jsale_paidcash.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Card", "Cheque" }));

        jLabel15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel15.setText("Payment Mode");

        jsale_compaymentmode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Partial Payment", "Full Payment" }));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Paid Amount:");

        jsale_paid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jsale_paidFocusLost(evt);
            }
        });
        jsale_paid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsale_paidActionPerformed(evt);
            }
        });
        jsale_paid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jsale_paidKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setText("Discount:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jsale_compaymentmode, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsale_totalamount, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsales_discont, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jsale_paidcash, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsale_paid, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsale_remaningamount, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsales_discont, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jsale_compaymentmode, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jsale_totalamount, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jsale_paidcash, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jsale_paid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jsale_remaningamount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(248, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 950, 480));

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        jsale_producttable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jsale_producttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Product_id", "Product_name", "Vat %", "M.R.P", "Rate", "Total Stock"
            }
        ));
        jsale_producttable.getTableHeader().setReorderingAllowed(false);
        jsale_producttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jsale_producttableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jsale_producttable);

        jPanel6.add(jScrollPane3);

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 480, 150));

        sale_totalcalculation.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ADD.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        ADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add to card.png"))); // NOI18N
        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        jsale_remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deleteicon.png"))); // NOI18N
        jsale_remove.setText("REMOVE");
        jsale_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsale_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sale_totalcalculationLayout = new javax.swing.GroupLayout(sale_totalcalculation);
        sale_totalcalculation.setLayout(sale_totalcalculationLayout);
        sale_totalcalculationLayout.setHorizontalGroup(
            sale_totalcalculationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sale_totalcalculationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sale_totalcalculationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ADD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jsale_remove, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        sale_totalcalculationLayout.setVerticalGroup(
            sale_totalcalculationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sale_totalcalculationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsale_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(sale_totalcalculation, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, -1, 110));

        jsales_auto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jsales_autoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jsales_autoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jsales_autoKeyTyped(evt);
            }
        });
        getContentPane().add(jsales_auto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 250, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jsales_invoicenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsales_invoicenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jsales_invoicenoActionPerformed

    private void jsales_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsales_clearActionPerformed

        
        modelItem = (DefaultTableModel) jsale_addproduct.getModel();
        modelItem.setRowCount(0);
        
        cust_id.setText("");
jsale_phone.setText("");
jsale_address.setText("");
jsales_auto.setText("");
jsale_totalamount.setText("");
jsale_paid.setText("");
jsale_remaningamount.setText("");
jsales_discont.setText("");
    }//GEN-LAST:event_jsales_clearActionPerformed

    private void jsale_homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsale_homeActionPerformed
this.dispose();
    }//GEN-LAST:event_jsale_homeActionPerformed

    private void jsale_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsale_saveActionPerformed
         conn=new Dbconn();
        String custid,saleno,saledate,salecname,saleadress,salephone,saleprodcutid,productname,productperunitprice,productquntity,producttoatalamount;
       
        String s_discount,actual_price,vat,billtotal,paymode,paycash,payamount,remaningamount,  productsalerate;
                int k=0;
        int r,c;
        float t;
          r=jsale_addproduct.getRowCount();
          c=jsale_addproduct.getColumnCount();
              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
       
        for(int row=0; row<r;row++)
        {
          custid=cust_id.getText();            
            saleno=jsales_invoiceno.getText();
            saledate=jsale_date.getText();
            salecname=jcustomer_name.getSelectedItem().toString();   
            saleadress=jsale_address.getText();
            salephone=jsale_phone.getText();
            productname=(String) jsale_addproduct.getValueAt(row, 1);
           
            
            vat=(String) jsale_addproduct.getValueAt(row, 2);
            actual_price=(String)jsale_addproduct.getValueAt(row, 3);
                productquntity=(String) jsale_addproduct.getValueAt(row, 4);
            productsalerate= (String) jsale_addproduct.getValueAt(row,5);
          
           // productname=(String) jsale_addproduct.getValueAt(row, 1);
           
            //actual_price=(String)jsale_addproduct.getValueAt(row, 2);
            //vat=(String) jsale_addproduct.getValueAt(row, 3);
            //productperunitprice= (String) jsale_addproduct.getValueAt(row,4);
              //productquntity=(String) jsale_addproduct.getValueAt(row, 5); 
           // s_discount=(String) jsale_addproduct.getValueAt(row, 6);
          
           producttoatalamount=(String) jsale_addproduct.getValueAt(row,6);
           billtotal=jsale_totalamount.getText();
           paymode=jsale_compaymentmode.getSelectedItem().toString();
           paycash=jsale_paidcash.getSelectedItem().toString();
           payamount=jsale_paid.getText();
           remaningamount=jsale_remaningamount.getText();
String discount=jsales_discont.getText();

               //float act=Float.parseFloat((String) actual_price); 
             //  float qty=Float.parseFloat((String) productquntity);
            //  float perunit=Float.parseFloat((String)productperunitprice);
//               float total=Float.parseFloat((String) producttoatalamount);
                //t=act*qty;
              // System.out.println("      "+t);
              // float v=Float.parseFloat((String) vat);;
              
             
        // System.out.println(saleno+" "+saledate+" "+salecname+" "+saleadress+" "+ salephone+ " "+ productname+" "+productperunitprice+" "+ productquntity+" "+s_discount);
//         
            Dbconn co=new Dbconn();
           con=co.getConnection();
           
            String query = "insert into sales_store(bill_id,cust_id, saledate,cust_name,address,"
                    + "phn_no,product_name,vat,product_perunitrate,"
        + " product_quantity,without_vat,product_price,bill_total,pay_mode, paid_cash,paid_amount,remaning_amount,sales_discount,status) "
        + " VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)" ;
            try
           {
               PreparedStatement pst=con.prepareStatement(query);
               //ps=con.prepareStatement(sql);
              pst.setString(1, saleno);
                pst.setString(2,custid);
               pst.setString(3, saledate);
               pst.setString(4, salecname);
                pst.setString(5,  saleadress);
                pst.setString(6, salephone);
                pst.setString(7, productname);
                 pst.setString(8,vat);
                  pst.setString(9,actual_price);
                pst.setString(10, productquntity);
                pst.setString(11, productsalerate);
              //  pst.setString(11,   producttoatalamount);
                pst.setString(12,producttoatalamount);
                pst.setString(13, billtotal);
                pst.setString(14, paymode);
                pst.setString(15,paycash);
                pst.setString(16, payamount);
                pst.setString(17, remaningamount);
                pst.setString(18,discount);
               pst.setString(19, "Active");
      
          // jsale_totalamount.setText(rs.getString("sum(product_price)"));
                k=pst.executeUpdate();
            
       
           
            
        }
         catch(Exception ex)
         {
             JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
         }

///JOptionPane.showConfirmDialog(rootPane, "Do you want to save Data","Confirm", JOptionPane.YES_NO_OPTION);                 
        }
         // JOptionPane.showConfirmDialog(rootPane, "Do you want to save","", JOptionPane.YES_NO_OPTION);
       JOptionPane.showMessageDialog(null, "save");
 
            /////////////////////////////////////////////////////////////////////
    ///////////////updation//////////////////////////////////
  
            
               
    increament();   
  clear();
  
       
////////////////float dis=Float.parseFloat((String) jsale_addproduct.getValueAt(row, 6));
//////////////////     
////////////////float total=0   ;
////////////////            if(dis==0)
////////////////            {
////////////////                total=perunit*qty;
////////////////                System.out.println("without"+total);
////////////////                producttoatalamount=""+total;
////////////////            }
////////////////            
////////////////                if(dis>0)
////////////////                
////////////////            {
////////////////                System.out.println(dis);
////////////////                dis=(t*dis)/100;
////////////////                
////////////////                 System.out.println(dis);
////////////////                //act=act-dis;
////////////////                 act=t-dis;
////////////////                 //dis=dis*qty;
////////////////                 
////////////////                  // System.out.println(dis);
////////////////                float s,d;
////////////////                System.out.println(vat);  
////////////////                  if(vat.equals("12.5"))
////////////////                      
////////////////                {
////////////////                    d=Float.parseFloat((String) vat);
////////////////                    s=((act*d)/100);
////////////////                    //s=((dis*d)/100);
////////////////                    System.out.println("s value"+s);
////////////////                   act=act+s;
////////////////                     System.out.println("A value"+act);
//////////////////                    
//////////////////                    act=act*qty;
//////////////////                    
////////////////               System.out.println("final"+act); 
////////////////                 producttoatalamount=""+act;
////////////////                
////////////////                   
////////////////                }
////////////////                else
////////////////                {
////////////////                           d=Float.parseFloat((String) vat);
////////////////                    s=((act*d)/100);
////////////////                 //   s=((dis*5)/100);
////////////////                    System.out.println("s value"+s);
////////////////                    act=act+s;
////////////////                     System.out.println("A value"+act);
////////////////////                    
////////////////////                    act=act*qty;
////////////////////                    
////////////////                     System.out.println("final"+act); 
////////////////                producttoatalamount=""+act;
//////////////////                   
////////////////                    
////////////////                }
////////////////                
////////////////                        
////////////////   
////////////////                
////////////////            }
//////////////////             
////////////////           // insert to db
////////////////
                     
//////////////////   
////////////////              Float g;
////////////////               if(dis==0)
////////////////               {
////////////////                   g=total;
////////////////               }
////////////////               else
////////////////               {
////////////////                   g=act;
////////////////               }
////////////////               String l=""+g;
////////////////               System.out.println(l);
////////////////               //              
////////////////               l=producttoatalamount;
////////////////               modalItem=(DefaultTableModel)jsale_addproduct.getModel();
////////////////               
////////////////                      modalItem.setValueAt(l, row, 7);
////////////////              // String l=""+g;
//////////////               //System.out.println(l);


    }//GEN-LAST:event_jsale_saveActionPerformed

    private void jcustomer_namePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcustomer_namePopupMenuWillBecomeInvisible
        
        /////////////////***********com selection*************
        String tem=(String)jcustomer_name.getSelectedItem();
        conn=new Dbconn();
         Connection con=null;
          //rs=conn.execute_query("select * from customer_infoo where customer_name=?", new String[]{jcustomer_name.getText()});
     String sql="Select * from customer_info where customer_name=?";
        try
      {
          Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/medicalstore","root","");  
          ps=con.prepareStatement(sql);
         ps.setString(1, tem);
          rs=ps.executeQuery();
         if(rs.next())
       {
          // jsales_invoiceno.setText(rs.getString("customer_id"));
           jsale_address.setText(rs.getString("customer_address"));
           jsale_phone.setText(rs.getString("customer_contactnumber"));
           cust_id.setText(rs.getString("customer_id"));
           System.out.print("run");
       }
       }
      catch(Exception ex)
      {
          ex.printStackTrace();
      }
        
    }//GEN-LAST:event_jcustomer_namePopupMenuWillBecomeInvisible

    private void jsale_producttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jsale_producttableMouseClicked
        /**********table click********/////////////
        if (evt.getClickCount() == 1)  
                {  
                     String selectedData = null;  
                   JTable target = (JTable)evt.getSource();  
               int selectedRow = target.getSelectedRow();
                Object selectedCellValue=target.getValueAt(selectedRow, 0);  
                row=selectedRow;
           
               // refreshForm(selectedCellValue);
            System.out.print(selectedCellValue);
                
                }
        
        
    }//GEN-LAST:event_jsale_producttableMouseClicked

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
      int rowcount =jsale_producttable.getSelectedRow();
         int colcount = jsale_producttable.getSelectedColumn();
        DefaultTableModel model;
                   //  row_count =1
//        {
                try
                {      
                    
                   
                        a = (String) jsale_producttable.getValueAt(row, 0);
                        b = (String) jsale_producttable.getValueAt(row, 1);
                        c = (String)jsale_producttable.getValueAt(row, 2);
                          d = (String)jsale_producttable.getValueAt(row, 3);
                           // e = (String)jsale_producttable.getValueAt(row, 4);
                    
                        //int n =JOptionPane.showConfirmDialog(rootPane, "Aru you sure? \n You want to save Data?", "Confirm!", JOptionPane.YES_NO_OPTION);
                       
                      //  conn = new Dbconn();
                        model=(DefaultTableModel)jsale_addproduct.getModel();
                        //modelItem.setRowCount(index);
                        try
                        {
                             model.addRow(new String[]{a,b,c,d});
                              //index++;
                                      
                        }
    catch(Exception ex)
    {
        JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
    }
                        
                }       
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, e,"Error", JOptionPane.ERROR_MESSAGE);
                }
/////*******************adding********///////////////////

    }//GEN-LAST:event_ADDActionPerformed

    private void jsale_addproductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jsale_addproductMouseClicked
        if (evt.getClickCount() == 1)  
                {  
                     String selectedData = null;  
                   JTable target = (JTable)evt.getSource();  
               int selectedRow = target.getSelectedRow();
                Object selectedCellValue=target.getValueAt(selectedRow, 0);  
                row=selectedRow;
           
               // refreshForm(selectedCellValue);
            System.out.print(selectedCellValue);
                
    
           /***table calculation*/////
            int rowcount = 0;
//         for(int i=0;i<=rowcount;i++)
//                {
//                    float temp,temp1,temp2;
//                    temp=Float.parseFloat((String) jsale_addproduct.getValueAt(row, 2));
//                    temp1=Float.parseFloat((String)jsale_addproduct.getValueAt(row, 3));
//                    temp2=temp*temp1;
//                   
//                   modalItem = (DefaultTableModel) jsale_addproduct.getModel();
//                   modalItem.setValueAt(temp2, row, 4);
//                    System.out.println(temp2);
//                }
   
       /********************************//////////////////////
        
    


                }
        
    }//GEN-LAST:event_jsale_addproductMouseClicked

    private void jsale_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsale_removeActionPerformed
     DefaultTableModel model;
        try
        {
          int rowcount = jsale_addproduct.getSelectedRow();
          int colcount = jsale_addproduct.getSelectedColumn();
        if(rowcount==-1)
        {
            JOptionPane.showMessageDialog(rootPane, "There Is no Row to select", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
          
          model=(DefaultTableModel)jsale_addproduct.getModel();
          model.removeRow(row);
        }
        catch(Exception e)
        {
           // JOptionPane.showMessageDialog(rootPane, "Select the row From Expiry Table...","Error.....", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jsale_removeActionPerformed

    private void jsale_addproductKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsale_addproductKeyPressed
      if(evt.getKeyCode()==KeyEvent.VK_TAB){

String custid,saledate,salecname,saleadress,salephone,saleprodcutid,productname,productperunitprice,productquntity,producttoatalamount;
       
        String s_discount,actual_price,vat,productsalerate;
                int k=0;
        int r,c;
        float t;
         float vat12,vat5;
        
        //System.out.println("hjguerhguerhg");
          r=jsale_addproduct.getRowCount();
          c=jsale_addproduct.getColumnCount();
              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
       
for(int row=0; row<r;row++)
            {                      
          custid=cust_id.getText();
            saledate=jsale_date.getText();
            salecname=jcustomer_name.getSelectedItem().toString();   
            saleadress=jsale_address.getText();
            salephone=jsale_phone.getText();
            productname=(String) jsale_addproduct.getValueAt(row, 1);
           
            
            vat=(String) jsale_addproduct.getValueAt(row, 2);
            actual_price=(String)jsale_addproduct.getValueAt(row, 3);
                productquntity=(String) jsale_addproduct.getValueAt(row, 4);
            productsalerate= (String) jsale_addproduct.getValueAt(row,5);
           
          //  s_discount=(String) jsale_addproduct.getValueAt(row, 6);
          
         //  producttoatalamount=(String) jsale_addproduct.getValueAt(row,6);

               float act=Float.parseFloat((String) actual_price); 
               float qty=Float.parseFloat((String) productquntity);
             
              //float perunit=Float.parseFloat((String)productperunitprice);
//               float total=Float.parseFloat((String) producttoatalamount);
              
            
                
             
                t=act*qty;
            System.out.println("total iss"+t);
             String total=""+t;
             
                 
                  modalItem=(DefaultTableModel)jsale_addproduct.getModel();
             modalItem.setValueAt(total, row,6);
              
                  float v=Float.parseFloat((String) vat);
                    
                    if(vat.equals("12.5"))
                      
                {
                                  v=(act*11.11f)/100;
          v=act-v;
        
             System.out.println("vat 12.5"+v);  
                    
               
            modalItem=(DefaultTableModel)jsale_addproduct.getModel();
                   modalItem.setValueAt(v, row, 5);   
                
                   
                }
                    else
                    {
           v=(act*4.74f)/100;
             System.out.println("sales rate is"+v);
             
             v=act-v;
          
             
             System.out.println("calculation"+v);
             
           modalItem=(DefaultTableModel)jsale_addproduct.getModel();
                 modalItem.setValueAt(v, row, 5);
                    }
                   
          float g;      
        if(vat=="12.5")
        {
          g=v;  
        }
         else
        {
            g=v;
            
        }
        String l=""+g;
        
            modalItem=(DefaultTableModel)jsale_addproduct.getModel();
                  modalItem.setValueAt(l, row, 5);
       

        //   int r=jsale_addproduct.getRowCount();
        
        // int c1=jsale_addproduct.getColumnCount();
              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
            }
String n1;
           float sum1 =0,j1;
        for(int row=0; row<r;row++)
        {
         //String producttoatalamount;
    producttoatalamount = (String) jsale_addproduct.getValueAt(row,6);
      
                   j1=Float.parseFloat((String)producttoatalamount);
               sum1=sum1+j1;
                n1=""+sum1;                
              // jsale_totalamount.setText(String.valueOf(n1)); 
         jsale_totalamount.setText(n1);        
        }
      



                 
            
      }
    }//GEN-LAST:event_jsale_addproductKeyPressed

    private void jsale_addproductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsale_addproductKeyReleased

    }//GEN-LAST:event_jsale_addproductKeyReleased

    private void jsale_totalamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsale_totalamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jsale_totalamountActionPerformed

    private void jsale_paidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jsale_paidFocusLost
        int r=jsale_addproduct.getRowCount();
        String n1;
           float sum1 =0,j1;
        // int c1=jsale_addproduct.getColumnCount();
              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
       
        for(int row=0; row<r;row++)
        {
         String producttoatalamount;
    producttoatalamount = (String) jsale_addproduct.getValueAt(row,6);
      
                   j1=Float.parseFloat((String)producttoatalamount);
               sum1=sum1+j1;
                n1=""+sum1;
                System.out.println("gfuewgfie"+n1);
              // jsale_totalamount.setText(String.valueOf(n1)); 
         jsale_totalamount.setText(n1);        
        }
       
        //////////////////////////////
        float a1,b1,c1,temp;
       a1=Float.parseFloat(jsale_totalamount.getText());
       temp=Float.parseFloat(jsales_discont.getText());
       temp=a1-temp;
       
       b1=Float.parseFloat(jsale_paid.getText());
       c1=temp-b1;
       jsale_remaningamount.setText(String.valueOf(c1));
    }//GEN-LAST:event_jsale_paidFocusLost

    private void jsale_paidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsale_paidKeyPressed
//////       if(evt.getKeyCode()==KeyEvent.VK_ENTER)
//////       {
//////              float a1,b1,c1;
//////       a1=Float.parseFloat(jsale_totalamount.getText());
//////       b1=Float.parseFloat(jsale_paid.getText());
//////       c1=a1-b1;
//////       jsale_remaningamount.setText(String.valueOf(c1));
//////       }
//////           
    }//GEN-LAST:event_jsale_paidKeyPressed

    private void jsale_paidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsale_paidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jsale_paidActionPerformed

    private void jsale_totalamountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jsale_totalamountFocusLost
//// table row conting/////
          int r=jsale_addproduct.getRowCount();
        String n1;
           float sum1 =0,j1;
        // int c1=jsale_addproduct.getColumnCount();
              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
       
        for(int row=0; row<r;row++)
        {
         String producttoatalamount;
    producttoatalamount = (String) jsale_addproduct.getValueAt(row,6);
      
                   j1=Float.parseFloat((String)producttoatalamount);
               sum1=sum1+j1;
                n1=""+sum1;                
              // jsale_totalamount.setText(String.valueOf(n1)); 
         jsale_totalamount.setText(n1);        
        }
      



//////           int rowcount = 0;
//////       
//////        try
//////      {
//////       rs=conn.execute_query("select sum(product_price)from sale_order where cust_id=?", new String[]{jsales_invoiceno.getText()});
//////  
//////          while(rs.next())
//////       {
//////           
//////          
//////            jsale_totalamount.setText(rs.getString("sum(product_price)"));
//////       }
//////       }
//////      catch(Exception ex)
//////      {
//////          //JOptionPane.showMessageDialog(null,ex);
//////      } 
    }//GEN-LAST:event_jsale_totalamountFocusLost

    private void jsales_autoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsales_autoKeyPressed
   sortTable();     // TODO add your handling code here:
    }//GEN-LAST:event_jsales_autoKeyPressed

    private void jsales_autoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsales_autoKeyReleased
sortTable();        // TODO add your handling code here:
    }//GEN-LAST:event_jsales_autoKeyReleased

    private void jsales_autoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsales_autoKeyTyped
sortTable();        // TODO add your handling code here:
    }//GEN-LAST:event_jsales_autoKeyTyped

    private void jsale_addproductFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jsale_addproductFocusLost
////String custid,saledate,salecname,saleadress,salephone,saleprodcutid,productname,productperunitprice,productquntity,producttoatalamount;
////       
////        String s_discount,actual_price,vat;
////                int k=0;
////        int r,c;
////        float t;
////        
////        //System.out.println("hjguerhguerhg");
////          r=jsale_addproduct.getRowCount();
////          c=jsale_addproduct.getColumnCount();
////              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
////       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
////       
////       
////                      
////          custid=cust_id.getText();
////            saledate=jsale_date.getText();
////            salecname=jcustomer_name.getSelectedItem().toString();   
////            saleadress=jsale_address.getText();
////            salephone=jsale_phone.getText();
////            productname=(String) jsale_addproduct.getValueAt(row, 1);
////           
////            actual_price=(String)jsale_addproduct.getValueAt(row, 3);
////            vat=(String) jsale_addproduct.getValueAt(row, 2);
////            productperunitprice= (String) jsale_addproduct.getValueAt(row,5);
////              productquntity=(String) jsale_addproduct.getValueAt(row, 4); 
////          //  s_discount=(String) jsale_addproduct.getValueAt(row, 6);
////          
////           producttoatalamount=(String) jsale_addproduct.getValueAt(row,6);
////
////               float act=Float.parseFloat((String) actual_price); 
////               float qty=Float.parseFloat((String) productquntity);
////              //float perunit=Float.parseFloat((String)productperunitprice);
//////               float total=Float.parseFloat((String) producttoatalamount);
////              
////               t=act*qty;
////               System.out.println("total iss"+t);
////             
////               modalItem=(DefaultTableModel)jsale_addproduct.getModel();
////               modalItem.setValueAt(t, row,6);
////               
////               
////               
////               
////         float v=Float.parseFloat((String) vat);
////          for(int row=0; row<r;row++)
////        {
////       
////         if(v==5)
////         {
////             v=(act*4.74f)/100;
////             System.out.println("sales rate is"+v);
////             
////             act=act-v;
////             System.out.println("calculation"+act);
////             
////         }
////        
////        
////         
////                   if(v==12.5)
////         {
////             v=(act*11.11f)/100;
////          act=act-v;
////             System.out.println("vat 12.5"+act);
////              //modalItem=(DefaultTableModel)jsale_addproduct.getModel();
////                  // modalItem.setValueAt(salevalue,row, 5);
////         }
////       
////         
////         
////            modalItem=(DefaultTableModel)jsale_addproduct.getModel();
////                   modalItem.setValueAt(act, row, 5);
////        }      
        
    }//GEN-LAST:event_jsale_addproductFocusLost

    private void jsale_totalamountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsale_totalamountKeyReleased
 if(evt.getKeyCode()==KeyEvent.VK_ENTER)
 {

 //String producttotalamunt;
   // modalItem=(DefaultTableModel)jsale_addproduct.getModel();
                //   modalItem.setValueAt(act, row, 5);
     int r=jsale_addproduct.getRowCount();
        String n1;
           float sum1 =0,j1;
      
        for(int row=0; row<r;row++)
        {
         String producttoatalamount;
    producttoatalamount = (String) jsale_addproduct.getValueAt(row,7);
            System.out.println("product amount is"+producttoatalamount);
      
                   j1=Float.parseFloat((String)producttoatalamount);
               sum1=sum1+j1;
                n1=""+sum1;                
              // jsale_totalamount.setText(String.valueOf(n1)); 
         jsale_totalamount.setText(n1);        
        }
 
 
 }
 
    }//GEN-LAST:event_jsale_totalamountKeyReleased

    private void jsale_saveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsale_saveKeyPressed
      if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
                   conn=new Dbconn();
        String custid,saleno,saledate,salecname,saleadress,salephone,saleprodcutid,productname,productperunitprice,productquntity,producttoatalamount;
       
        String s_discount,actual_price,vat,billtotal,paymode,paycash,payamount,remaningamount;
                int k=0;
        int r,c;
        float t;
          r=jsale_addproduct.getRowCount();
          c=jsale_addproduct.getColumnCount();
              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
       
        for(int row=0; row<r;row++)
        {
          custid=cust_id.getText();            
            saleno=jsales_invoiceno.getText();
            saledate=jsale_date.getText();
            salecname=jcustomer_name.getSelectedItem().toString();   
            saleadress=jsale_address.getText();
            salephone=jsale_phone.getText();
            productname=(String) jsale_addproduct.getValueAt(row, 1);
           
            actual_price=(String)jsale_addproduct.getValueAt(row, 2);
            vat=(String) jsale_addproduct.getValueAt(row, 3);
            productperunitprice= (String) jsale_addproduct.getValueAt(row,4);
              productquntity=(String) jsale_addproduct.getValueAt(row, 5); 
            s_discount=(String) jsale_addproduct.getValueAt(row, 6);
          
           producttoatalamount=(String) jsale_addproduct.getValueAt(row,7);
           billtotal=jsale_totalamount.getText();
           paymode=jsale_compaymentmode.getSelectedItem().toString();
           paycash=jsale_paidcash.getSelectedItem().toString();
           payamount=jsale_paid.getText();
           remaningamount=jsale_remaningamount.getText();

               float act=Float.parseFloat((String) actual_price); 
               float qty=Float.parseFloat((String) productquntity);
              float perunit=Float.parseFloat((String)productperunitprice);
//               float total=Float.parseFloat((String) producttoatalamount);
                t=act*qty;
               System.out.println("      "+t);
               float v=Float.parseFloat((String) vat);;
              
             
        // System.out.println(saleno+" "+saledate+" "+salecname+" "+saleadress+" "+ salephone+ " "+ productname+" "+productperunitprice+" "+ productquntity+" "+s_discount);
//         
            Dbconn co=new Dbconn();
           con=co.getConnection();
           
            String query = "insert into sales_store(bill_id, saledate,cust_name,address,"
                    + "phn_no,product_name,actual_price,vat, product_perunitrate,"
        + " product_quantity,salediscount, product_price,bill_total,pay_mode, paid_cash,paid_amount,remaning_amount,cust_id,status) "
        + " VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) " ;
           
////////////////float dis=Float.parseFloat((String) jsale_addproduct.getValueAt(row, 6));
//////////////////     
////////////////float total=0   ;
////////////////            if(dis==0)
////////////////            {
////////////////                total=perunit*qty;
////////////////                System.out.println("without"+total);
////////////////                producttoatalamount=""+total;
////////////////            }
////////////////            
////////////////                if(dis>0)
////////////////                
////////////////            {
////////////////                System.out.println(dis);
////////////////                dis=(t*dis)/100;
////////////////                
////////////////                 System.out.println(dis);
////////////////                //act=act-dis;
////////////////                 act=t-dis;
////////////////                 //dis=dis*qty;
////////////////                 
////////////////                  // System.out.println(dis);
////////////////                float s,d;
////////////////                System.out.println(vat);  
////////////////                  if(vat.equals("12.5"))
////////////////                      
////////////////                {
////////////////                    d=Float.parseFloat((String) vat);
////////////////                    s=((act*d)/100);
////////////////                    //s=((dis*d)/100);
////////////////                    System.out.println("s value"+s);
////////////////                   act=act+s;
////////////////                     System.out.println("A value"+act);
//////////////////                    
//////////////////                    act=act*qty;
//////////////////                    
////////////////               System.out.println("final"+act); 
////////////////                 producttoatalamount=""+act;
////////////////                
////////////////                   
////////////////                }
////////////////                else
////////////////                {
////////////////                           d=Float.parseFloat((String) vat);
////////////////                    s=((act*d)/100);
////////////////                 //   s=((dis*5)/100);
////////////////                    System.out.println("s value"+s);
////////////////                    act=act+s;
////////////////                     System.out.println("A value"+act);
////////////////////                    
////////////////////                    act=act*qty;
////////////////////                    
////////////////                     System.out.println("final"+act); 
////////////////                producttoatalamount=""+act;
//////////////////                   
////////////////                    
////////////////                }
////////////////                
////////////////                        
////////////////   
////////////////                
////////////////            }
//////////////////             
////////////////           // insert to db
////////////////
            try
           {
               
//////////////////   
////////////////              Float g;
////////////////               if(dis==0)
////////////////               {
////////////////                   g=total;
////////////////               }
////////////////               else
////////////////               {
////////////////                   g=act;
////////////////               }
////////////////               String l=""+g;
////////////////               System.out.println(l);
////////////////               //              
////////////////               l=producttoatalamount;
////////////////               modalItem=(DefaultTableModel)jsale_addproduct.getModel();
////////////////               
////////////////                      modalItem.setValueAt(l, row, 7);
////////////////              // String l=""+g;
//////////////               //System.out.println(l);
               PreparedStatement pst=con.prepareStatement(query);
               //ps=con.prepareStatement(sql);
              pst.setString(1, saleno);
               pst.setString(2, saledate);
               pst.setString(3, salecname);
                pst.setString(4,  saleadress);
                pst.setString(5, salephone);
                pst.setString(6, productname);
                 pst.setString(7, actual_price);
                  pst.setString(8, vat);
                pst.setString(9, productperunitprice);
                pst.setString(10, productquntity);
                pst.setString(11, s_discount);
                pst.setString(12,producttoatalamount);
                pst.setString(13, billtotal);
                pst.setString(14, paymode);
                pst.setString(15,paycash);
                pst.setString(16, payamount);
                pst.setString(17, remaningamount);
                pst.setString(18,custid);
               pst.setString(19, "Active");
      
          // jsale_totalamount.setText(rs.getString("sum(product_price)"));
                k=pst.executeUpdate();
            
       
           
            
        }
         catch(Exception ex)
         {
             JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
         }
            
          //  increament();
            
//               int a,d,e;
//    a=Integer.parseInt((String) jsale_producttable.getValueAt(row,5));
//   d=Integer.parseInt((String) jsale_addproduct.getValueAt(row,5));
//   e=d-a;
//   e= Integer.parseInt((String)jsale_producttable.getValueAt(row,5));
//
// String value1=(String)jsale_addproduct.getValueAt(row,5);
//String value2=(String)jsale_producttable.getValueAt(row,5);
//        //rs=conn.execute_query("update  product_info set totalstock='"+value1+"' where product_name=? ", new String[]{jc_name.getText()});
//  int j;
//    j = conn.update_data("update  product_info set totalstock=? where product_name=?", new String[]{value2,value1});
//  try
//      {
//         while(rs.next())
//       {
//        //jc_totalstock.setText(rs.getString("totalstock"));
//           System.out.println("e");
//           System.out.print("run");
////            a=Float.parseFloat(jc_totalquantity.getText());
////   d=Float.parseFloat(jc_totalstock.getText());
////   e=d-a;
//   
// //jc_totalstock.setText(String.valueOf(e));
//       }
//       }
//      catch(Exception ex)
//      {
//          ex.printStackTrace();
//      }
      
    
        }
          JOptionPane.showConfirmDialog(rootPane, "Do you want to save","", JOptionPane.YES_NO_OPTION);
        JOptionPane.showMessageDialog(null, "save");
 increament();   
  clear();
  
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jsale_saveKeyPressed

    private void jsale_totalamountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jsale_totalamountFocusGained

    int r=jsale_addproduct.getRowCount();
        String n1;
           float sum1 =0,j1;
        // int c1=jsale_addproduct.getColumnCount();
              //  JOptionPane.showMessageDialog(rootPane, r, "Rows",JOptionPane.ERROR_MESSAGE);
       // JOptionPane.showMessageDialog(rootPane, c, "Columns", JOptionPane.ERROR_MESSAGE);
       
        for(int row=0; row<r;row++)
        {
         String producttoatalamount;
    producttoatalamount = (String) jsale_addproduct.getValueAt(row,7);
      
                   j1=Float.parseFloat((String)producttoatalamount);
               sum1=sum1+j1;
                n1=""+sum1;                
              // jsale_totalamount.setText(String.valueOf(n1)); 
         jsale_totalamount.setText(n1);        
        }
      


        
// TODO add your handling code here:
    }//GEN-LAST:event_jsale_totalamountFocusGained

    private void jsale_addproductFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jsale_addproductFocusGained
    }//GEN-LAST:event_jsale_addproductFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ResultSet rs;
conn=new Dbconn();
rs=conn.execute_query("select MAX(bill_id) from sales_store where status=?", new String[]{"ACTIVE"});
try
{
  
while(rs.next())
{
    
    ReportViewwithparam r=new ReportViewwithparam();
    String filename;
    int temp;
    filename="Reports/SalesOrderBill.jrxml";
   temp= Integer.parseInt(rs.getString("MAX(bill_id)"));
    
   System.out.print(temp);
        r.generate(filename,temp);
  }
}
catch (Exception ex)
{
    JOptionPane.showMessageDialog(rootPane, "Contact To Service Provider", "Error", JOptionPane.ERROR_MESSAGE);
}



        
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
 public void show_date()
    {
    Calendar c1=new GregorianCalendar();
      
     int month=c1.get(Calendar.MONTH);
        int day=c1.get(Calendar.DAY_OF_MONTH);
        int year=c1.get(Calendar.YEAR);
      jsale_date.setText(year+"/"+(month+1)+"/"+day);
        
    }
 public void ccomm_add()
 {
 try
 {
   conn=new Dbconn();
   
   rs=conn.execute_query("select customer_name from customer_info where customerstatus=?", new String[]{"Active"});  
while(rs.next())
{
    String name=rs.getString("customer_name");
    jcustomer_name.addItem(name);
}
 }
 catch(Exception e)
         {
 }
 
     
 
 
 
 }
 public void product_table()
 {
   
     
      conn=new Dbconn();
       
        modalItem.setRowCount(0);
        try
        {
           // String temp=jc_date.getText();
            rs=conn.execute_query("select * from product_info where productstatus=? ", new String[]{"Active"});
            
            while (rs.next())
                
            {   
             productid=rs.getString("product_id");
             productname=rs.getString("product_name");
            // discount=rs.getString("sale_discount");
            actual_price=rs.getString("product_vat");
             Vat=rs.getString("Actual_price");
             productrateperunit=rs.getString("product_rateperunit");
          total_stock=rs.getString("totalstock");
//                Sr_no=rs.getString("Sr_no");  
//                Date1=rs.getString("countersale_date");
//                Name=rs.getString("product_name");
//                Quantity=rs.getString("product_quantity");
//                PriceperUnit=rs.getString("perunitprice");
//                TotalAmount=rs.getString("product_totalamount");
                modalItem.addRow(new String[]{productid, productname,actual_price,Vat,
                   productrateperunit,  total_stock});
         

            }
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
 }
 public void refreshForm(Object cellvalue)
            
    {
        Dbconn conn=new Dbconn();
        con=conn.getConnection();
        ResultSet rs;
        try
        {
            Statement st=con.createStatement();
            rs=st.executeQuery("select * from product_info where product_id="+cellvalue);
            while(rs.next())
            {
//               productid=rs.getString("product_id");
             productname=rs.getString("product_name");
             productrateperunit=rs.getString("product_rateperunit");
          // total_stock=rs.getString("totalstock");
                modalItem.addRow(new String[]{productid, productname,
                   productrateperunit});
             }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
 private void sortTable()
    {
        String searchteaxt;
        searchteaxt=jsales_auto.getText();
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" +searchteaxt));
    }
 public void clear()
 {
         
        modelItem = (DefaultTableModel) jsale_addproduct.getModel();
        modelItem.setRowCount(0);
        
        cust_id.setText("");
jsale_phone.setText("");
jsale_address.setText("");
jsales_auto.setText("");

 }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JTextField cust_id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox jcustomer_name;
    private javax.swing.JTable jsale_addproduct;
    private javax.swing.JTextArea jsale_address;
    private javax.swing.JComboBox jsale_compaymentmode;
    private javax.swing.JLabel jsale_date;
    private javax.swing.JButton jsale_home;
    private javax.swing.JTextField jsale_paid;
    private javax.swing.JComboBox jsale_paidcash;
    private javax.swing.JTextField jsale_phone;
    private javax.swing.JTable jsale_producttable;
    private javax.swing.JTextField jsale_remaningamount;
    private javax.swing.JButton jsale_remove;
    private javax.swing.JButton jsale_save;
    private javax.swing.JTextField jsale_totalamount;
    private javax.swing.JTextField jsales_auto;
    private javax.swing.JButton jsales_clear;
    private javax.swing.JTextField jsales_discont;
    private javax.swing.JTextField jsales_invoiceno;
    private javax.swing.JPanel sale_totalcalculation;
    // End of variables declaration//GEN-END:variables
}
